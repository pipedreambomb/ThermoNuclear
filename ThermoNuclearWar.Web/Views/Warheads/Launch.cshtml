@using IO.Swagger.Model
@using ThermoNuclearWar.Web.Controllers
@model ThermoNuclearWar.Web.Models.LaunchModel

@{
    ViewBag.Title = "Warheads";
}

<h2>Welcome, Mr. President</h2>
<p>
    Current status of warheads:
    @Html.Raw(Model.ServiceIsOffline ? "<span class=service-error>Offline</span>" : "Online")
    (refresh page to check again)
</p>

<p>Please enter your passphrase to launch warheads:</p>

@using (Html.BeginForm(nameof(WarheadsController.Launch)))
{
    @Html.AntiForgeryToken()
    <p>
        @Html.PasswordFor(model => model.Passphrase)
        <input type="submit" value="Launch"
               @Html.Raw(Model.ServiceIsOffline ? @"disabled title=""Unable to launch when warheads service is offline""" : "")
               onclick="return confirm('Are you sure?')" />
    </p>
    <p>
        @Html.ValidationMessageFor(model => model.Passphrase)
    </p>
    if (Model.LaunchResult?.Result == WarheadLaunchResult.ResultEnum.Success)
    {
        <p>
            Warheads launched successfully. <a target="_blank" href="https://en.wikipedia.org/wiki/J._Robert_Oppenheimer">Now you are become death, destroyer of worlds</a>.
        </p>
    }
    else if (Model.LaunchResult?.Result == WarheadLaunchResult.ResultEnum.Failure)
    {
        <p>
            I'm sorry, Mr President, but there was an error during launch: <span class="service-error">@Model.LaunchResult.Message</span>
        </p>
    }
}